user nginx;
pid /run/nginx.pid;

worker_processes auto;

worker_rlimit_nofile 100000;

events {
        worker_connections 100000;
}

http {
        charset utf-8;
        sendfile off;
        tcp_nopush on;
        tcp_nodelay on;
	etag off;
        server_tokens off;
        log_not_found off;
        types_hash_max_size 2048;
	keepalive_timeout 0;
	keepalive_requests 100000;
        client_header_buffer_size 32k;
        client_max_body_size 1000M;
        client_body_buffer_size 1000M;
        large_client_header_buffers 4 32k;
	proxy_ignore_client_abort on; 
	proxy_buffering on;
        proxy_buffer_size 128k;
        proxy_buffers 4 256k;
        proxy_busy_buffers_size 256k;

        open_file_cache max=2000 inactive=20s;
        open_file_cache_valid 60s;
        open_file_cache_min_uses 5;
        open_file_cache_errors off;

        client_body_timeout 360s;
        client_header_timeout 360s;

        # GZIP
        gzip on;
        gzip_types text/css text/x-component application/x-javascript application/javascript text/javascript text/x-js text/richtext image/svg+xml text/plain text/xsd text/xsl text/xml image/x-icon application/octet-stream;

        # MIME

        include mime.types;
        default_type application/octet-stream;

        log_format  standard  '$remote_addr - $remote_user [$time_local] "$request" '
                '$status $body_bytes_sent $upstream_response_time "$http_referer" '
                '"$http_user_agent" "$http_x_forwarded_for"';
        log_format json_analytics escape=json '{'
                '"msec": "$msec", ' # request unixtime in seconds with a milliseconds resolution
                '"connection": "$connection", ' # connection serial number
                '"connection_requests": "$connection_requests", ' # number of requests made in connection
                '"pid": "$pid", ' # process pid
                '"request_id": "$request_id", ' # the unique request id
                '"request_length": "$request_length", ' # request length (including headers and body)
                '"remote_addr": "$remote_addr", ' # client IP
                '"remote_user": "$remote_user", ' # client HTTP username
                '"remote_port": "$remote_port", ' # client port
                '"time_local": "$time_local", '
                '"time_iso8601": "$time_iso8601", ' # local time in the ISO 8601 standard format
                '"request": "$request", ' # full path no arguments if the request
                '"request_uri": "$request_uri", ' # full path and arguments if the request
                '"args": "$args", ' # args
                '"status": "$status", ' # response status code
                '"body_bytes_sent": "$body_bytes_sent", ' # the number of body bytes exclude headers sent to a client
                '"bytes_sent": "$bytes_sent", ' # the number of bytes sent to a client
                '"http_referer": "$http_referer", ' # HTTP referer
                '"http_user_agent": "$http_user_agent", ' # user agent
                '"http_x_forwarded_for": "$http_x_forwarded_for", ' # http_x_forwarded_for
                '"http_host": "$http_host", ' # the request Host: header
                '"server_name": "$server_name", ' # the name of the vhost serving the request
                '"request_time": "$request_time", ' # request processing time in seconds with msec resolution
                '"upstream": "$upstream_addr", ' # upstream backend server for proxied requests
                '"upstream_connect_time": "$upstream_connect_time", ' # upstream handshake time incl. TLS
                '"upstream_header_time": "$upstream_header_time", ' # time spent receiving upstream headers
                '"upstream_response_time": "$upstream_response_time", ' # time spend receiving upstream body
                '"upstream_response_length": "$upstream_response_length", ' # upstream response length
                '"upstream_cache_status": "$upstream_cache_status", ' # cache HIT/MISS where applicable
                '"ssl_protocol": "$ssl_protocol", ' # TLS protocol
                '"ssl_cipher": "$ssl_cipher", ' # TLS cipher
                '"scheme": "$scheme", ' # http or https
                '"request_method": "$request_method", ' # request method
                '"server_protocol": "$server_protocol", ' # request protocol, like HTTP/1.1 or HTTP/2.0
                '"pipe": "$pipe", ' # "p" if request was pipelined, "." otherwise
                '"gzip_ratio": "$gzip_ratio", '
                #                    '"http_cf_ray": "$http_cf_ray", '
                '"http_cf_ray": "$http_cf_ray"'
                #                    '"geoip_country_code": "$geoip_country_code"'
                '}';


        # logging
        access_log off;
        #access_log /var/log/nginx/access.log;
        #error_log /var/log/nginx/error.log warn;

        # load configs
        include /etc/nginx/conf.d/*.conf;
        include /etc/nginx/sites-enabled/*;
}
